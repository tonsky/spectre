
using web
using concurrent

**
** Descendant of this class is an entry point of web application
** 
abstract class Settings {
//  new make(File appDir) { this.appDir = appDir }
  
//////////////////////////////////////////////////////////////////////////
// Settings
//////////////////////////////////////////////////////////////////////////
  
//  File? appDir
  Turtle? root
  Charset charset := Charset.utf8  
  
//////////////////////////////////////////////////////////////////////////
// WebSockets
//////////////////////////////////////////////////////////////////////////
  
  ** This method should return WsProcessor instance that will process
  ** incoming web socket connection. See `WsActor`.
  virtual WsProcessor wsProcessor(WsHandshakeReq req) { throw UnsupportedErr() }
  
//////////////////////////////////////////////////////////////////////////
// App instance
//////////////////////////////////////////////////////////////////////////
  
//  static Settings instance() { Actor.locals["spectre.settings"] }
//  static Void setInstance(Settings app) { Actor.locals["spectre.settings"] = app }
}
